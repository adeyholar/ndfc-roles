# ndfc_vpc_delete/tasks/main.yml

# REST returns internal server error (500) when called from 
# Ansible dcnm_rest module per below.  Hence, this is a work in progress
# and doesn't work.

- ansible.builtin.include_role:
    name: ndfc_vpc_config_get

# Retrieve serial number and vpc config state for vpc_peer_1

- ansible.builtin.include_role:
    name: ndfc_device_config_get
  vars:
    device_name: "{{ vpc_config.peer_1 }}"

- ansible.builtin.include_role:
    name: ndfc_device_info_get
  vars:
    device_name: "{{ vpc_config.peer_1 }}"

- name: worker set_fact vpc_peer_1 fabric {{ device_config.switch_fabric }} vpc {{ vpc_name }} device {{ vpc_config.peer_1 }} - p1_serial, p1_vpc
  set_fact:
    p1_serial: "{{ device_info.serialNumber }}"
    p1_vpc: "{{ device_info.isVpcConfigured }}"

# Retrieve serial number and vpc config state for vpc_peer_2

- ansible.builtin.include_role:
    name: ndfc_device_config_get
  vars:
    device_name: "{{ vpc_config.peer_2 }}"

- ansible.builtin.include_role:
    name: ndfc_device_info_get
  vars:
    device_name: "{{ vpc_config.peer_2 }}"

- name: worker set_fact vpc_peer_2 fabric {{ device_config.switch_fabric }} vpc {{ vpc_name }} device {{ vpc_config.peer_2 }} - p2_serial, p2_vpc
  set_fact:
    p2_serial: "{{ device_info.serialNumber }}"
    p2_vpc: "{{ device_info.isVpcConfigured }}"

# Conditionally delete vpc peering
- name: main REST DELETE VPC Peers fabric_name {{ fabric_name }} vpc_name {{ vpc_name }} configured {{ p1_vpc }}/{{ p2_vpc }} serial_numbers {{ p1_serial }}/{{ p2_serial }}"
  cisco.dcnm.dcnm_rest:
    method: DELETE
    path: "/appcenter/cisco/ndfc/api/v1/lan-fabric/rest/vpcpair"
    json_data: "{{ vars_dict | to_json }}"
  vars:
    vars_dict:
      serialNumber: "{{ p2_serial }}"
  when: p1_serial != '' and p2_serial != '' and p1_vpc == True and p2_vpc == True
