# ndfc_vpc_interface_merged_all/tasks/worker.yml
# - Retrieve serialNumber and isVpcConfigured for both target vpc peers
# - if, for both peers, serialNumber != '' and isVpcConfigured == 'false'
#     create the peers
# - else
#     skip

- ansible.builtin.include_role:
    name: ndfc_vpc_config_get
  vars:
    vpc_name: "{{ item.vpc_name }}"

- ansible.builtin.include_role:
    name: ndfc_device_config_get
  vars:
    device_name: "{{ vpc_config.peer_1 }}"

- ansible.builtin.include_role:
    name: ndfc_device_info_get
  vars:
    device_name: "{{ vpc_config.peer_1 }}"

- name: worker set_fact vpc_peer_1 {{ device_config.switch_fabric }} {{ item.vpc_name }} {{ item.vpc_port_id }} - p1_serial, p1_vpc, p1_db_id, p1_ip
  set_fact:
    p1_serial: "{{ device_info.serialNumber }}"
    p1_vpc: "{{ device_info.isVpcConfigured }}"
    p1_db_id: "{{ device_info.switchDbID }}"
    p1_ip: "{{ device_info.ipAddress }}"

- ansible.builtin.include_role:
    name: ndfc_device_config_get
  vars:
    device_name: "{{ vpc_config.peer_2 }}"

- ansible.builtin.include_role:
    name: ndfc_device_info_get
  vars:
    device_name: "{{ vpc_config.peer_2 }}"

- name: worker set_fact vpc_peer_2 {{ device_config.switch_fabric }} {{ item.vpc_name }} {{ item.vpc_port_id }} - p2_serial, p2_vpc, p2_db_id, p2_ip
  set_fact:
    p2_serial: "{{ device_info.serialNumber }}"
    p2_vpc: "{{ device_info.isVpcConfigured }}"
    p2_db_id: "{{ device_info.switchDbID }}"
    p2_ip: "{{ device_info.ipAddress }}"

- name: worker merged fabric {{ device_config.switch_fabric }} vpc_name {{ item.vpc_name }} vpc_port_id {{ item.vpc_port_id }} interface_mode {{ item.interface_mode }} ip {{ p1_ip }}/{{p2_ip}}
  cisco.dcnm.dcnm_interface:
    fabric: "{{ device_config.switch_fabric }}"
    state: merged
    config:
      - name: "{{ item.vpc_port_id }}"
        type: vpc
        switch:
          - "{{ p1_ip }}"
          - "{{ p2_ip }}"
        deploy: true
        profile:
          admin_state: true
          mode: "{{ item.interface_mode }}"
          peer1_members: "{{ item.member_list }}"
          peer2_members: "{{ item.member_list }}"
          pc_mode: "{{ item.port_channel_mode }}"
          bpdu_guard: "{{ item.bpdu_guard }}"
          port_type_fast: "{{ item.port_type_fast }}"
          mtu: "{{ item.mtu }}"
          peer1_allowed_vlans: "{{ item.peer1_allowed_vlans }}"
          peer2_allowed_vlans: "{{ item.peer2_allowed_vlans }}"
          peer1_description: "{{ item.vpc_port_id }} {{ item.interface_mode }}"
          peer2_description: "{{ item.vpc_port_id }} {{ item.interface_mode }}"
  vars:
    ansible_connection: httpapi
