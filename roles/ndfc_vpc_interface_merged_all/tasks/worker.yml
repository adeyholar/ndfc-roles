# ndfc_vpc_interface_merged_all/tasks/worker.yml
# - Retrieve serialNumber and isVpcConfigured for both target vpc peers
# - if, for both peers, serialNumber != '' and isVpcConfigured == 'false'
#     create the peers
# - else
#     skip

# set_fact for p1_serial, p1_vpc, p1_db_id
- name: worker query {{ item.fabric }} {{ item.vpc_name }} vpc_peer_1 {{ ip }}
  cisco.dcnm.dcnm_inventory:
    fabric: "{{ item.fabric }}"
    state: query
    config:
    - seed_ip: "{{ ip }}"
  register: wr1
  vars:
    wq1: "[?fabric == '{{ item.fabric }}'] | [?vpc_name == '{{ item.vpc_name }}'].peer_1_ip | [0]"
    ip: "{{ vpc_peers | json_query(wq1)}}"
- name: worker set_fact {{ item.fabric }} {{ item.vpc_name }} {{ item.vpc_port_id }} - p1_serial, p1_vpc, p1_db_id, p1_ip
  set_fact:
    p1_serial: "{{ wr1.response | json_query(wq2) }}"
    p1_vpc: "{{ wr1.response | json_query(wq3) }}"
    p1_db_id: "{{ wr1.response | json_query(wq4) }}"
    p1_ip: "{{ wr1.response | json_query(wq5) }}"
  vars:
    wq2: "[0].serialNumber"
    wq3: "[0].isVpcConfigured"
    wq4: "[0].switchDbID"
    wq5: "[0].ipAddress"

# set_fact for p2_serial, p2_vpc, p2_db_id
- name: worker query {{ item.fabric }} {{ item.vpc_name }} vpc_peer_2 {{ ip }}
  cisco.dcnm.dcnm_inventory:
    fabric: "{{ item.fabric }}"
    state: query
    config:
    - seed_ip: "{{ ip }}"
  register: wr2
  vars:
    wq6: "[?fabric == '{{ item.fabric }}'] | [?vpc_name == '{{ item.vpc_name }}'].peer_2_ip | [0]"
    ip: "{{ vpc_peers | json_query(wq6)}}"

- name: worker set_fact {{ item.fabric }} {{ item.vpc_name }} {{ item.vpc_port_id }} - p2_serial, p2_vpc, p2_db_id, p2_ip
  set_fact:
    p2_serial: "{{ wr2.response | json_query(wq7) }}"
    p2_vpc: "{{ wr2.response | json_query(wq8) }}"
    p2_db_id: "{{ wr2.response | json_query(wq9) }}"
    p2_ip: "{{ wr2.response | json_query(wq10) }}"
  vars:
    wq7: "[0].serialNumber"
    wq8: "[0].isVpcConfigured"
    wq9: "[0].switchDbID"
    wq10: "[0].ipAddress"

- name: worker merged fabric {{ item.fabric }} vpc_name {{ item.vpc_name }} vpc_port_id {{ item.vpc_port_id }} interface_mode {{ item.interface_mode }} ip {{ p1_ip }}/{{p2_ip}}
  cisco.dcnm.dcnm_interface:
    fabric: "{{ item.fabric }}"
    state: merged
    config:
      - name: "{{ item.vpc_port_id }}"
        type: vpc
        switch:
          - "{{ p1_ip }}"
          - "{{ p2_ip }}"
        deploy: true
        profile:
          admin_state: true
          mode: "{{ item.interface_mode }}"
          peer1_members: "{{ item.member_list }}"
          peer2_members: "{{ item.member_list }}"
          pc_mode: "{{ item.port_channel_mode }}"
          bpdu_guard: "{{ item.bpdu_guard }}"
          port_type_fast: "{{ item.port_type_fast }}"
          mtu: "{{ item.mtu }}"
          peer1_allowed_vlans: "{{ item.peer1_allowed_vlans }}"
          peer2_allowed_vlans: "{{ item.peer2_allowed_vlans }}"
          peer1_description: "{{ item.vpc_port_id }} {{ item.interface_mode }}"
          peer2_description: "{{ item.vpc_port_id }} {{ item.interface_mode }}"
