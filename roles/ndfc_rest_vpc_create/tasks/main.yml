# ndfc_vpc_create_rest/tasks/main.yml

# - Retrieve serialNumber and isVpcConfigured for both target vpc peers
# - if, for both peers, serialNumber != '' and isVpcConfigured == 'false'
#     create the peers
# - else
#     skip

- ansible.builtin.include_role:
    name: ndfc_vpc_config_get

# peer_1

- ansible.builtin.include_role:
    name: ndfc_device_config_get
  vars:
    device_name: "{{ vpc_config.peer_1 }}"

- ansible.builtin.include_role:
    name: ndfc_device_info_get
  vars:
    device_name: "{{ vpc_config.peer_1 }}"

- name: worker set_fact vpc_peer_1 {{ device_config.switch_fabric }} {{ vpc_name }} - p1_serial, p1_vpc, p1_db_id
  set_fact:
    p1_serial: "{{ device_info.serialNumber }}"
    p1_vpc: "{{ device_info.isVpcConfigured }}"
    p1_db_id: "{{ device_info.switchDbID }}"

# peer_2

- ansible.builtin.include_role:
    name: ndfc_device_config_get
  vars:
    device_name: "{{ vpc_config.peer_2 }}"

- ansible.builtin.include_role:
    name: ndfc_device_info_get
  vars:
    device_name: "{{ vpc_config.peer_2 }}"

- name: worker set_fact vpc_peer_1 {{ device_config.switch_fabric }} {{ vpc_name }} - p2_serial, p2_vpc, p2_db_id
  set_fact:
    p2_serial: "{{ device_info.serialNumber }}"
    p2_vpc: "{{ device_info.isVpcConfigured }}"
    p2_db_id: "{{ device_info.switchDbID }}"

# Conditionally create vpc peering
- name: main REST create VPC Peers fabric_name {{ device_config.switch_fabric }} vpc_name {{ vpc_name }} configured {{ p1_vpc }}/{{ p2_vpc }} serial_number {{ p1_serial }}/{{ p2_serial }}"
  cisco.dcnm.dcnm_rest:
    method: POST
    path: "/appcenter/cisco/ndfc/api/v1/lan-fabric/rest/vpcpair"
    json_data: "{{ vars_dict | to_json }}"
  vars:
    ansible_connection: httpapi
    vars_dict:
      peerOneId: "{{ p1_serial }}"
      peerTwoId: "{{ p2_serial }}"
      useVirtualPeerlink: "true"
  when: p1_serial != '' and p2_serial != '' and p1_vpc == False and p2_vpc == False

- ansible.builtin.include_role:
    name: ndfc_rest_config_deploy
  vars:
    device_name: "{{ vpc_config.peer_1 }}"
  when: p1_serial != '' and p2_serial != '' and p1_vpc == False and p2_vpc == False

- ansible.builtin.include_role:
    name: ndfc_rest_config_deploy
  vars:
    device_name: "{{ vpc_config.peer_2 }}"
  when: p1_serial != '' and p2_serial != '' and p1_vpc == False and p2_vpc == False
